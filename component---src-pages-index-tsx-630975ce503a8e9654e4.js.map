{"version":3,"sources":["webpack:///./src/components/AsciiComputer.tsx","webpack:///./src/components/CursorRow.tsx","webpack:///./src/components/CursorRowGroup.tsx","webpack:///./src/components/index/Desktop.tsx","webpack:///./src/components/AutoplayVideos.tsx","webpack:///./src/components/RecordPlayer.tsx","webpack:///./src/components/index/Mobile.tsx","webpack:///./src/components/ResponsiveBreakpoint.tsx","webpack:///./src/pages/index.tsx"],"names":["AsciiComputer","children","ComputerPart","Computer","top","left","ComputerScreen","right","bottom","styled","div","pre","CursorRow","text","startTyping","className","delay","onComplete","finishTyping","useState","typedText","setTypedText","callback","useRef","useEffect","current","currentIndex","length","t","intervalId","setInterval","call","clearInterval","TextContainer","Cursor","span","Blinking","keyframes","CursorRowGroup","contentItems","startTypingIndex","setStartTypingIndex","onFinishTypingRow","useCallback","map","section","index","key","DesktopIndex","React","finishTypingIntro","setFinishTypingIntro","DesktopContent","HeaderContainer","Header","Index","headerName","ContentContainer","BioContainer","onDoubleClick","intro","ComputerContainer","ComputerContent","currentVideoSrcIndex","setCurrentVideoSrcIndex","ref","video","addEventListener","nextIndex","VideoURLs","autoPlay","muted","src","DashedContainer","PlayerContainer","startingPosition","endingPosition","rotateArm","PlayerArm","isArmRotating","css","Player","MobileIndex","isPlayingMusic","setIsPlayingMusic","currentSongIndex","setCurrentSongIndex","setTimeout","currentSong","AudioUrls","MobileContainer","mobileHeaderName","RecordPlayerContainer","StyledRecordPlayer","onClick","HiddenAudio","PlayerComponents","arm","playerWithoutArm","audio","ResponsiveBreakpoint","desktopView","mobileView","breakpoint","currentView","setView","useLayoutEffect","window","outerWidth","Footer","footer","MobileBreakpoint","TerminalScreenFrame","IndexPage","parseInt","target","href","EMAILME","RESUME","GALAKSIJA_ARTICLE","to"],"mappings":"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","file":"component---src-pages-index-tsx-630975ce503a8e9654e4.js","sourcesContent":["import React, { FC } from \"react\"\nimport styled from \"styled-components\"\nimport { Computer } from \"../constants/siteConstants\"\n\nexport const AsciiComputer: FC = ({ children }) => {\n  return (\n    <div>\n      <div>\n        <ComputerPart>{Computer.top}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.left}</ComputerPart>\n        <ComputerScreen>{children}</ComputerScreen>\n        <ComputerPart>{Computer.right}</ComputerPart>\n      </div>\n      <div>\n        <ComputerPart>{Computer.bottom}</ComputerPart>\n      </div>\n    </div>\n  )\n}\n\nconst ComputerScreen = styled.div`\n  display: inline-block;\n  width: 15vw;\n  height: 7vw;\n`\n\nconst ComputerPart = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n","import React, { FC, HTMLAttributes, useState, useEffect, useRef } from \"react\"\nimport styled, { keyframes } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  text: string\n  startTyping: boolean\n  delay?: number\n  onComplete?: () => void\n  finishTyping: boolean\n}\n\nexport const CursorRow: FC<Props> = ({\n  text,\n  startTyping,\n  className = \"\",\n  delay = 50,\n  onComplete = () => undefined,\n  finishTyping,\n}) => {\n  const [typedText, setTypedText] = useState(\"\")\n  const callback = useRef<() => void>()\n\n  useEffect(() => {\n    callback.current = (): void => {\n      if (text === typedText) {\n        onComplete()\n        return\n      } else {\n        const currentIndex = typedText.length\n        setTypedText(t => t + text[currentIndex])\n      }\n    }\n  }, [text, typedText])\n\n  useEffect(() => {\n    if (startTyping) {\n      const tick = () => {\n        callback.current?.()\n      }\n\n      const intervalId = setInterval(tick, delay)\n      return () => clearInterval(intervalId)\n    }\n  }, [startTyping])\n\n  useEffect(() => {\n    if (finishTyping) {\n      setTypedText(text)\n    }\n  }, [finishTyping])\n\n  return (\n    <div className={className}>\n      <TextContainer>{typedText}</TextContainer>\n      {startTyping && <Cursor />}\n    </div>\n  )\n}\n\nconst TextContainer = styled.span`\n  &::selection {\n    background-color: white;\n    color: black;\n  }\n`\n\nconst Blinking = keyframes`\n  from {\n    background-color: white;\n  }\n\n  to {\n    background-color: black;\n  }\n`\n\nconst Cursor = styled.div`\n  display: inline-block;\n  background-color: white;\n  height: 23px;\n  width: 10px;\n  animation: ${Blinking} 1s linear infinite;\n  vertical-align: text-top;\n`\n","import React, { FC, useCallback, useEffect, useState } from \"react\"\nimport { CursorRow } from \"./CursorRow\"\n\ninterface IOwnProps {\n  contentItems: string[]\n  finishTyping?: boolean\n}\n\nexport const CursorRowGroup: FC<IOwnProps> = ({ contentItems, finishTyping = false }) => {\n  const [startTypingIndex, setStartTypingIndex] = useState(0)\n\n  const onFinishTypingRow = useCallback(() => {\n    setStartTypingIndex(startTypingIndex + 1)\n  }, [startTypingIndex, setStartTypingIndex])\n\n  useEffect(() => {\n    if (finishTyping) {\n      setStartTypingIndex(contentItems.length)\n    }\n  }, [finishTyping])\n\n  return (\n    <>\n      {contentItems.map((section, index) => (\n        <CursorRow\n          text={section}\n          key={index}\n          startTyping={startTypingIndex === index}\n          onComplete={onFinishTypingRow}\n          finishTyping={finishTyping}\n        />\n      ))}\n    </>\n  )\n}\n","import React, { FC, HTMLAttributes } from \"react\"\nimport styled from \"styled-components\"\nimport { Index } from \"../../constants/siteConstants\"\nimport { AsciiComputer } from \"../AsciiComputer\"\nimport { AutoplayVideos } from \"../AutoplayVideos\"\nimport { CursorRowGroup } from \"../CursorRowGroup\"\n\nexport const DesktopIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  const [ finishTypingIntro, setFinishTypingIntro ] = React.useState(false)\n\n  return (\n    <DesktopContent className={className ?? \"\"}>\n      <HeaderContainer>\n        <Header>{Index.headerName}</Header>\n      </HeaderContainer>\n      <ContentContainer>\n        <BioContainer onDoubleClick={() => setFinishTypingIntro(true)}>\n          <CursorRowGroup contentItems={Index.intro} finishTyping={finishTypingIntro} />\n        </BioContainer>\n        <ComputerContainer>\n          <AsciiComputer>\n            <ComputerContent />\n          </AsciiComputer>\n        </ComputerContainer>\n      </ContentContainer>\n    </DesktopContent>\n  )\n}\n\nconst DesktopContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 50px;\n`\n\nconst HeaderContainer = styled.div`\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: center;\n`\n\nconst ComputerContent = styled(AutoplayVideos)`\n  width: 100%;\n  height: 100%;\n`\n\nconst Header = styled.pre`\n  color: white;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n`\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  flex-grow: 0;\n`\n\nconst DashedContainer = styled.div`\n  border: 5px dashed white;\n  padding: 15px;\n  flex-grow: 1;\n  width: 45%;\n`\n\nconst BioContainer = styled(DashedContainer)`\n  margin-right: 25px;\n  display: grid;\n  grid-row-gap: 15px;\n`\n\nconst ComputerContainer = styled(DashedContainer)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React, { FC, HTMLAttributes, useState } from \"react\"\nimport { VideoURLs } from \"../constants/siteConstants\"\n\ntype Props = HTMLAttributes<HTMLVideoElement>\n\nexport const AutoplayVideos: FC<Props> = ({ className }) => {\n  const [currentVideoSrcIndex, setCurrentVideoSrcIndex] = useState(0)\n\n  const rotateVideo = (video: HTMLVideoElement | null) => {\n    if (video) {\n      video.addEventListener(\"ended\", () => {\n        const nextIndex = (currentVideoSrcIndex + 1) % VideoURLs.length\n        setCurrentVideoSrcIndex(nextIndex)\n      })\n    }\n  }\n\n  return (\n    <video\n      ref={rotateVideo}\n      autoPlay={true}\n      muted={true}\n      className={className}\n      src={VideoURLs[currentVideoSrcIndex]}\n    />\n  )\n}\n","import React, { FC, HTMLAttributes } from \"react\"\nimport { RecordPlayer as PlayerComponents } from \"../constants/siteConstants\"\nimport styled, { keyframes, css } from \"styled-components\"\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  isArmRotating: boolean\n  onClick?: () => void\n}\n\nexport const RecordPlayer: FC<Props> = ({\n  className = \"\",\n  isArmRotating,\n  onClick,\n}) => {\n  return (\n    <PlayerContainer className={className} onClick={onClick}>\n      <PlayerArm isArmRotating={isArmRotating}>\n        {PlayerComponents.arm}\n      </PlayerArm>\n      <Player>{PlayerComponents.playerWithoutArm}</Player>\n    </PlayerContainer>\n  )\n}\n\nconst PlayerContainer = styled.div`\n  position: relative;\n  display: inline-block;\n`\n\nconst startingPosition = `\n    transform: rotate(0deg);\n    top: 9px;\n    right: 12px;\n`\n\nconst endingPosition = `\n    transform: rotate(90deg);\n    top: 2px;\n    right: -25px;\n`\n\nconst rotateArm = keyframes`\n    from {\n        ${startingPosition}\n    }\n\n    to {\n        ${endingPosition}\n    }\n`\n\nconst PlayerArm = styled.pre<{ isArmRotating: boolean }>`\n  position: absolute;\n  margin: 0;\n  transform-origin: top left;\n\n  ${({ isArmRotating }) => {\n    if (isArmRotating) {\n      return css`\n        animation: ${rotateArm} 2s linear;\n        ${endingPosition}\n      `\n    } else {\n      return `\n                ${startingPosition}\n            `\n    }\n  }}\n`\n\nconst Player = styled.pre`\n  margin: 0;\n`\n","import React, {\n  FC,\n  HTMLAttributes,\n  useState,\n  useEffect,\n  RefObject,\n} from \"react\"\nimport styled from \"styled-components\"\nimport { Index, AudioUrls } from \"../../constants/siteConstants\"\nimport { CursorRowGroup } from \"../CursorRowGroup\"\nimport { RecordPlayer } from \"../RecordPlayer\"\n\nexport const MobileIndex: FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n}) => {\n  const [isPlayingMusic, setIsPlayingMusic] = useState(false)\n  const [currentSongIndex, setCurrentSongIndex] = useState(0)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPlayingMusic(true)\n    }, 3000)\n  }, [])\n\n  const keepPlaying = (ref: HTMLAudioElement | null) => {\n    if (ref) {\n      ref.addEventListener(\"ended\", () => {\n        const nextIndex = (currentSongIndex + 1) % AudioUrls.length\n        setCurrentSongIndex(nextIndex)\n      })\n    }\n  }\n\n  const currentSong = AudioUrls[currentSongIndex]\n\n  const onRecordPlayerClick = () => {\n    setIsPlayingMusic(!isPlayingMusic)\n  }\n\n  return (\n    <MobileContainer className={className ?? \"\"}>\n      <HeaderContainer>\n        <Header>{Index.mobileHeaderName}</Header>\n        <RecordPlayerContainer>\n          <StyledRecordPlayer\n            isArmRotating={isPlayingMusic}\n            onClick={onRecordPlayerClick}\n          />\n          {isPlayingMusic && (\n            <HiddenAudio src={currentSong} autoPlay={true} ref={keepPlaying} />\n          )}\n        </RecordPlayerContainer>\n      </HeaderContainer>\n      <BioContainer>\n        <CursorRowGroup contentItems={Index.intro} />\n      </BioContainer>\n    </MobileContainer>\n  )\n}\n\nconst MobileContainer = styled.div`\n  display: grid;\n  grid-row-gap: 40px;\n  margin: 0 15px;\n`\n\nconst BioContainer = styled.div`\n  border: 5px dashed white;\n  padding: 15px;\n  display: grid;\n  grid-row-gap: 10px;\n  font-size: 0.9rem;\n  min-height: 231px;\n`\n\nconst HeaderContainer = styled.div`\n  text-align: center;\n`\n\nconst Header = styled.pre`\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n  max-width: 100%;\n`\n\nconst StyledRecordPlayer = styled(RecordPlayer)`\n  margin-top: 20px;\n`\n\nconst RecordPlayerContainer = styled.div``\n\nconst HiddenAudio = styled.audio``\n","import { FC, ReactElement, useLayoutEffect, useState } from \"react\"\n\ninterface Props {\n  desktopView: ReactElement\n  mobileView: ReactElement\n  breakpoint: number\n}\n\nexport const ResponsiveBreakpoint: FC<Props> = ({\n  desktopView,\n  mobileView,\n  breakpoint,\n}) => {\n  const [currentView, setView] = useState<\"desktop\" | \"mobile\">(\"desktop\")\n  useLayoutEffect(() => {\n    setView(window.outerWidth >= breakpoint ? \"desktop\" : \"mobile\")\n  })\n\n  switch (currentView) {\n    case \"mobile\":\n      return mobileView\n    case \"desktop\":\n      return desktopView\n  }\n}\n","import React, { FC, useLayoutEffect } from \"react\"\n\nimport styled from \"styled-components\"\nimport { PageWrapper } from \"../components/page-wrapper\"\nimport { DesktopIndex } from \"../components/index/Desktop\"\nimport { MobileIndex } from \"../components/index/Mobile\"\nimport {\n  EMAILME,\n  GALAKSIJA_ARTICLE,\n  MobileBreakpoint,\n  RESUME,\n} from \"../constants/siteConstants\"\nimport { Link } from \"gatsby\"\nimport { ResponsiveBreakpoint } from \"../components/ResponsiveBreakpoint\"\n\nconst IndexPage: FC = () => {\n  return (\n    <>\n      <PageWrapper>\n        <TerminalScreenFrame>\n          <ResponsiveBreakpoint\n            desktopView={<DesktopIndex />}\n            mobileView={<MobileIndex />}\n            breakpoint={parseInt(MobileBreakpoint)}\n          />\n        </TerminalScreenFrame>\n      </PageWrapper>\n      <Footer>\n        <div>\n          <a target=\"_blank\" href={EMAILME}>\n            Write me an e-mail\n          </a>\n        </div>\n        <div>\n          <a target=\"_blank\" href={RESUME}>\n            Read an awesome resume\n          </a>\n        </div>\n        <div>\n          <a target=\"_blank\" href={GALAKSIJA_ARTICLE}>\n            Learn about programs on the radio\n          </a>\n        </div>\n        <Link to=\"/credits\">Give credit where credit is due</Link>\n      </Footer>\n    </>\n  )\n}\n\nconst Footer = styled.footer`\n  display: grid;\n  justify-content: center;\n  margin: 10px 0;\n\n  @media (max-width: ${MobileBreakpoint}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`\n\nconst TerminalScreenFrame = styled.div``\n\nexport default IndexPage\n"],"sourceRoot":""}